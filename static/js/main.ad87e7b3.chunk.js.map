{"version":3,"sources":["styles/Nav.js","components/Header.js","styles/Container.js","styles/Table.js","styles/Spinner.js","styles/Title.js","styles/Form.js","components/SearchBar.js","styles/Dropdown.js","styles/Button.js","components/Filter.js","pages/Transactions.js","styles/Tab.js","styles/Alert.js","components/AlertModal.js","pages/Trade.js","styles/Theme.js","App.js","index.js"],"names":["NavBar","styled","div","NavLinkActive","NavLink","Header","exact","to","activeStyle","color","Grid","Row","Col","props","size","Table","table","loader","keyframes","loaderInner","Spinner","Title","h2","Form","form","sharedStyles","css","Label","label","Input","input","Select","select","TextArea","textarea","fieldset","SearchBar","results","useState","query","setQuery","resultsClone","useEffect","description","filter","result","toLowerCase","includes","setResults","type","value","onChange","e","target","placeholder","style","backgroundColor","DropdownContent","Dropdown","button","Button","Filter","setFilter","filterResults","id","filtered","action","year","Date","getFullYear","month","getMonth","currentMonth","timestamp","lastMonth","setMonth","sixMonths","onClick","Transactions","loading","setLoading","String","fromCharCode","amount","triangle","setTriangle","asc","setAsc","onSort","field","ascField","sortedData","slice","sort","a","b","triangleField","fetch","then","res","json","catch","err","console","log","key","data","localeCompare","hasOwnProperty","transactions","renderedResults","map","className","split","reverse","join","currency","marginRight","Tabs","Tab","active","Alert","AlertModal","alertProps","setAlert","message","history","useHistory","push","Trade","formRef","useRef","date","toISOString","registerForm","setRegisterForm","setActive","alert","setAlertProps","handleClick","preventDefault","index","parseInt","previousForm","handleFieldChange","event","handleSubmit","method","body","JSON","stringify","headers","response","reset","current","window","scrollTo","prevState","onSubmit","min","defaultValue","required","ref","disabled","step","lightTheme","fontColor","GlobalStyles","createGlobalStyle","theme","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"ytBAGO,IAAMA,EAASC,IAAOC,IAAV,KAUNC,EAAgBF,YAAOG,IAAPH,CAAH,KCVX,SAASI,IACtB,OACE,eAACL,EAAD,WACE,cAACG,EAAD,CAAeG,OAAK,EAACC,GAAG,YAAYC,YAAa,CAAEC,MAAO,WAA1D,0BAGA,cAACN,EAAD,CACEG,OAAK,EACLC,GAAG,kBACHC,YAAa,CAAEC,MAAO,WAHxB,sB,mVCPC,IAAMC,EAAOT,IAAOC,IAAV,KAIJS,EAAMV,IAAOC,IAAV,KAKHU,EAAMX,IAAOC,IAAV,KACN,SAACW,GAAD,OAAWA,EAAMC,Q,wkBCVpB,IAAMC,EAAQd,IAAOe,MAAV,K,0xCCAX,IAAMC,EAASC,YAAH,KAiCNC,EAAcD,YAAH,KAsBXE,EAAUnB,IAAOC,IAAV,IASLe,GAGahB,IAAOC,IAAV,IAKViB,G,wICxER,IAAME,EAAQpB,IAAOqB,GAAV,K,srDCAX,IAAMC,EAAOtB,IAAOuB,KAAV,KAWXC,EAAeC,YAAH,KAgBLC,EAAQ1B,IAAO2B,MAAV,KAMLC,EAAQ5B,IAAO6B,MAAV,IAGdL,GAGSM,EAAS9B,IAAO+B,OAAV,KAkBNC,EAAWhC,IAAOiC,SAAV,IAMjBT,GAGoBxB,IAAOkC,SAAV,KCjEN,SAASC,EAAUC,GAAU,IAAD,EACfC,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAElBF,mBAASD,EAAQA,SAAjCI,EAFkC,oBAezC,OAPAC,qBAAU,WACR,IAAMC,EAAcF,EAAaG,QAAO,SAACC,GAAD,OACtCA,EAAOF,YAAYG,cAAcC,SAASR,MAE5CF,EAAQW,WAAWL,KAClB,CAACJ,IAGF,cAACV,EAAD,CACEoB,KAAK,OACLC,MAAOX,EACPY,SAfiB,SAACC,GACpBZ,EAASY,EAAEC,OAAOH,MAAMJ,gBAetBQ,YAAY,wBACZC,MAAO,CAAEC,gBAAiB,W,21BCtBzB,IAAMC,GAAkBxD,IAAOC,IAAV,MAqBfwD,GAAWzD,IAAOC,IAAV,IAGTuD,IAKkBxD,IAAO0D,OAAV,K,obC7BpB,IAAMC,GAAS3D,IAAO0D,OAAV,MCEJ,SAASE,GAAOxB,GAAU,IAAD,EACVC,mBAAS,IADC,mBAC/BM,EAD+B,KACvBkB,EADuB,OAEfxB,mBAASD,EAAQA,SAAjCI,EAF+B,oBAIhCsB,EAAgB,SAACX,GACrBU,EAAUV,EAAEC,OAAOW,KAoCrB,OAjCAtB,qBAAU,WACR,GAAe,WAAXE,GAAkC,UAAXA,EAAoB,CAC7C,IAAMqB,EAAWxB,EAAaG,QAAO,SAACC,GAAD,OACnCA,EAAOqB,OAAOpB,cAAcC,SAASH,MAEvCP,EAAQW,WAAWiB,QACd,GAAe,iBAAXrB,EAA2B,CACpC,IAAIuB,GAAO,IAAIC,MAAOC,cAClBC,GAAQ,IAAIF,MAAOG,WACnBC,EAAe,IAAIJ,KAAKD,EAAMG,EAAO,GACnCL,EAAWxB,EAAaG,QAAO,SAACC,GACpC,OAAO,IAAIuB,KAAKvB,EAAO4B,WAAaD,EAAe,KAErDnC,EAAQW,WAAWiB,QACd,GAAe,cAAXrB,EAAwB,CACjC,IAAI8B,EAAY,IAAIN,KACpBM,EAAUC,SAASD,EAAUH,WAAa,GAC1C,IAAMN,EAAWxB,EAAaG,QAAO,SAACC,GACpC,OAAO,IAAIuB,KAAKvB,EAAO4B,WAAaC,EAAY,KAElDrC,EAAQW,WAAWiB,QACd,GAAe,cAAXrB,EAAwB,CACjC,IAAIgC,EAAY,IAAIR,KACpBQ,EAAUD,SAASC,EAAUL,WAAa,GAC1C,IAAMN,EAAWxB,EAAaG,QAAO,SAACC,GACpC,OAAO,IAAIuB,KAAKvB,EAAO4B,WAAaG,EAAY,KAElDvC,EAAQW,WAAWiB,QAEnB5B,EAAQW,WAAWP,KAEpB,CAACG,IAGF,eAACc,GAAD,WACE,cAACE,GAAD,qBACA,eAACH,GAAD,WACE,sBAAMO,GAAG,eAAea,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAAtD,2BAGA,sBAAMY,GAAG,YAAYa,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAAnD,wBAGA,sBAAMY,GAAG,YAAYa,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAAnD,2BAGA,sBAAMY,GAAG,SAASa,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAAhD,yBAGA,sBAAMY,GAAG,QAAQa,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAA/C,wBAGA,sBACEY,GAAG,QACHa,QAAS,SAACzB,GAAD,OAAOW,EAAcX,IAC9BG,MAAO,CAAE9C,MAAO,WAHlB,gCCxDO,SAASqE,KAAgB,IAAD,EACPxC,mBAAS,IADF,mBAC9BD,EAD8B,KACrBW,EADqB,OAEPV,oBAAS,GAFF,mBAE9ByC,EAF8B,KAErBC,EAFqB,OAGL1C,mBAAS,CACvCmC,UAAWQ,OAAOC,aAAa,QAC/BhB,OAAQe,OAAOC,aAAa,QAC5BvC,YAAasC,OAAOC,aAAa,QACjCC,OAAQF,OAAOC,aAAa,UAPO,mBAG9BE,EAH8B,KAGpBC,EAHoB,OASf/C,mBAAS,CAC7BmC,WAAW,EACXP,QAAQ,EACRvB,aAAa,EACbwC,QAAQ,IAb2B,mBAS9BG,EAT8B,KASzBC,EATyB,KAgB/BC,EAAS,SAACC,GACd,IAAIC,EAAQ,eAAQJ,GAChBK,EAAatD,EAAQuD,QAAQC,MAAK,SAACC,EAAGC,GACxC,OAAID,EAAEL,GAASM,EAAEN,GACRC,EAASD,IAAU,EAAI,EAE5BK,EAAEL,GAASM,EAAEN,GACRC,EAASD,GAAS,GAAK,EAEzB,KAGTzC,EAAW2C,GACXD,EAASD,IAAUC,EAASD,GAC5BF,EAAOG,GAEP,IAAIM,EAAa,eAAQZ,GACzBY,EAAcP,GAASR,OAAOC,aAAaQ,EAASD,GAAS,KAAO,MACpEJ,EAAYW,IAGdtD,qBAAU,YACU,uCAAG,8BAAAoD,EAAA,sEACAG,MACjB,wFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MANG,OASnB,IAASG,KARHC,EADa,QAQdb,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEtB,UAAUkC,cAAcb,EAAErB,cAChCiC,EACVA,EAAKE,eAAeH,IACG,UAArBC,EAAKD,GAAKvC,SACZwC,EAAKD,GAAKtB,SAAW,GAI3BoB,QAAQC,IAAIE,GACZ1D,EAAW0D,GACX1B,GAAW,GAlBQ,2CAAH,qDAoBlB6B,KACC,IAEH,IAAMC,EAAkBzE,EAAQ0E,KAAI,SAAClE,GACnC,OACE,qBAAImE,UAAU,kBAAd,UACE,6BAAKnE,EAAO4B,UAAUwC,MAAM,KAAKC,UAAUC,KAAK,OAChD,6BAAKtE,EAAOqB,SACZ,6BAAKrB,EAAOF,cACO,UAAlBE,EAAOqB,OACN,qBACEX,MAAO,CACL9C,MAAO,WAFX,UAKGoC,EAAOsC,OALV,KAKoBtC,EAAOuE,SAL3B,OAQA,qBACE7D,MAAO,CACL9C,MAAO,aAFX,cAKIoC,EAAOsC,OALX,KAKqBtC,EAAOuE,SAL5B,SAbiCvE,EAAOmB,OAyBhD,OACE,eAACtD,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,CAAKE,KAAM,EAAX,SACE,cAACO,EAAD,kCAGH0D,EACC,cAAC3D,EAAD,IAEA,qCACE,eAACT,EAAD,WACE,cAACC,EAAD,CAAKE,KAAM,EAAGyC,MAAO,CAAE8D,YAAa,OAApC,SACE,cAACjF,EAAD,CAAWC,QAASA,EAASW,WAAYA,MAE3C,cAACpC,EAAD,CAAKE,KAAM,EAAX,SACE,cAAC+C,GAAD,CAAQxB,QAASA,EAASW,WAAYA,SAG1C,cAACrC,EAAD,UACE,cAACC,EAAD,CAAKE,KAAM,EAAX,SACE,eAACC,EAAD,WACE,gCACE,+BACE,qBAAI8D,QAAS,kBAAMW,EAAO,cAA1B,uBACaJ,EAASX,aAEtB,qBAAII,QAAS,kBAAMW,EAAO,WAA1B,oBACUJ,EAASlB,UAEnB,qBAAIW,QAAS,kBAAMW,EAAO,gBAA1B,yBACeJ,EAASzC,eAExB,qBAAIkC,QAAS,kBAAMW,EAAO,WAA1B,oBACUJ,EAASD,eAIvB,gCAAQ2B,iB,wcCpIjB,IAAMQ,GAAOrH,IAAOC,IAAV,MAKJqH,GAAMtH,IAAO0D,OAAV,MASJ,SAAC9C,GAAD,OAAYA,EAAM2G,OAAS,oBAAsB,MACvC,SAAC3G,GAAD,OAAYA,EAAM2G,OAAS,QAAU,U,kYCfpD,IAAMC,GAAQxH,IAAOC,IAAV,MAEI,SAACW,GAAD,OAAWA,EAAMJ,SCAxB,SAASiH,GAAT,GAA+C,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACvCnH,EAAmBkH,EAAnBlH,MAAOoH,EAAYF,EAAZE,QACTC,EAAUC,cAChB,OACE,eAACN,GAAD,CAAOhH,MAAOA,EAAOoE,QAAS,kBAAM+C,GAAS,IAA7C,UACa,YAAVnH,EACC,sBAAMoE,QAAS,kBAAMiD,EAAQE,KAAK,cAAlC,wBAEA,GAEDH,KCNQ,SAASI,KACtB,IAAMC,EAAUC,mBADc,EAEU7F,mBAAS,CAC/C8F,KAAK,GAAD,QAAK,IAAIhE,MAAOiE,cAAcpB,MAAM,KAAK,IAC7C/C,OAAQ,SACRkD,SAAU,GACVzE,YAAa,GACbwC,OAAQ,KAPoB,mBAEvBmD,EAFuB,KAETC,EAFS,OASFjG,mBAAS,GATP,mBASvBkF,EATuB,KASfgB,EATe,OAUJlG,oBAAS,GAVL,mBAUvBmG,EAVuB,KAUhBb,EAVgB,OAWMtF,mBAAS,CAC3C7B,MAAO,GACPoH,QAAS,KAbmB,mBAWvBF,EAXuB,KAWXe,EAXW,KAgBxBC,EAAc,SAACvF,GACnBA,EAAEwF,iBACF,IAAMC,EAAQC,SAAS1F,EAAEC,OAAOW,GAAI,GAChC6E,IAAUrB,GACZgB,EAAUK,GAEZ,IAAIE,EAAY,eAAQT,GACxBS,EAAY,OAAa3F,EAAEC,OAAOH,MAClCqF,EAAgBQ,IAGZC,EAAoB,SAACvD,EAAOwD,GAChC,IAAIF,EAAY,eAAQT,GACxBS,EAAatD,GAASwD,EAAM5F,OAAOH,MACnCqF,EAAgBQ,IAGZG,EAAY,uCAAG,WAAOD,GAAP,eAAAnD,EAAA,6DACnBmD,EAAML,iBADa,SAED3C,MAChB,uFACA,CACEkD,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB7E,UAAW6D,EAAaF,KACxBlE,OAAQoE,EAAapE,OACrBvB,YAAa2F,EAAa3F,YAC1BwC,OAAQmD,EAAanD,OACrBiC,SAAUkB,EAAalB,WAEzBmC,QAAS,CACP,eAAgB,qCAInBrD,MAAK,SAACsD,GAAD,OAAcA,EAASpD,UAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAnBX,OAEbH,EAFa,OAoBnB8C,EAAM5F,OAAOoG,QACbvB,EAAQwB,QAAQxG,MAAQ,GACxBsF,EAAU,GACVjC,QAAQC,IAAIL,GACZwD,OAAOC,SAAS,EAAG,GAEjBlB,EADS,MAAPvC,EACY,SAAC0D,GACb,OAAO,2BACFA,GADL,IAEEpJ,MAAO,MACPoH,QAAS,wBAIC,SAACgC,GACb,OAAO,2BACFA,GADL,IAEEpJ,MAAO,UACPoH,QAAS,iCAIfD,GAAS,GA1CU,4CAAH,sDA6ClB,OACE,qCACGa,EAAQ,cAACf,GAAD,CAAYC,WAAYA,EAAYC,SAAUA,IAAe,GACtE,cAAClH,EAAD,UACE,cAACC,EAAD,UACE,eAACY,EAAD,CAAMyC,GAAG,kBAAkB8F,SAAU,SAAC1G,GAAD,OAAO8F,EAAa9F,IAAzD,UACE,cAAC/B,EAAD,sBACA,eAACiG,GAAD,WACE,cAACC,GAAD,CACE1C,QAAS8D,EACTnB,OAAmB,IAAXA,EACRxD,GAAI,EACJd,MAAM,SAJR,oBAQA,cAACqE,GAAD,CACE1C,QAAS8D,EACTnB,OAAmB,IAAXA,EACRxD,GAAI,EACJd,MAAM,QAJR,sBASF,cAACvB,EAAD,mBACA,cAACE,EAAD,CACEoB,KAAK,OACLe,GAAG,OACH+F,KAAK,IAAI3F,MAAOiE,cAAcpB,MAAM,KAAK,GACzC+C,cAAc,IAAI5F,MAAOiE,cAAcpB,MAAM,KAAK,GAClD9D,SAAU,SAACC,GAAD,OAAO4F,EAAkB,OAAQ5F,IAC3C6G,UAAQ,IAEV,cAACtI,EAAD,uBACA,eAACI,EAAD,CACEiI,aAAc1B,EAAalB,SAC3BjE,SAAU,SAACC,GAAD,OAAO4F,EAAkB,WAAY5F,IAC/C8G,IAAKhC,EACL+B,UAAQ,EAJV,UAME,wBAAQ/G,MAAM,GAAGiH,UAAQ,EAAC5G,MAAO,CAAE9C,MAAO,QAA1C,sBAGA,wBAAQyC,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAACvB,EAAD,0BACA,cAACM,EAAD,CACEgB,KAAK,OACLE,SAAU,SAACC,GAAD,OAAO4F,EAAkB,cAAe5F,IAClD6G,UAAQ,IAEV,cAACtI,EAAD,qBACA,cAACE,EAAD,CACEoB,KAAK,SACL+D,UAAU,SACVhD,GAAG,SACHV,YAAY,IACZyG,IAAI,OACJK,KAAK,OACLjH,SAAU,SAACC,GAAD,OAAO4F,EAAkB,SAAU5F,IAC7C6G,UAAQ,IAEV,cAACrG,GAAD,CAAQX,KAAK,SAAS+D,UAAU,gBAAgB9D,MAAM,SAAtD,8B,0PCrJL,IAAMmH,GAAa,CACxBjB,KAAM,UACNkB,UAAW,QAQAC,GAAeC,YAAH,MAKG,SAAC3J,GAAD,OAAWA,EAAM4J,MAAMrB,QCTpC,SAASsB,KACtB,OACE,cAAC,IAAD,CAAeD,MAAOJ,GAAtB,SACE,qCACE,cAACE,GAAD,IACA,eAAC,IAAD,WACE,cAAClK,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACqK,KAAK,YAAYC,UAAW9F,KACzC,cAAC,IAAD,CAAO6F,KAAK,kBAAkBC,UAAW3C,aCZnD4C,IAASC,OAAO,cAACJ,GAAD,IAASK,SAASC,eAAe,W","file":"static/js/main.ad87e7b3.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = styled.div`\n  box-sizing: border-box;\n  margin: 0px;\n  height: 50px;\n  width: 100%;\n  background-color: #fff;\n  position: relative;\n  border-bottom: 1px solid #efefef;\n`;\n\nexport const NavLinkActive = styled(NavLink)`\n  float: left;\n  color: #4c4d4d;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  font-size: 17px;\n  font-weight: bold;\n  text-transform: uppercase;\n\n  &:hover {\n    color: #2dbe60;\n    transition: all 0.2s ease;\n  }\n`;\n","import React from 'react';\nimport { NavBar, NavLinkActive } from '../styles/Nav';\n\nexport default function Header() {\n  return (\n    <NavBar>\n      <NavLinkActive exact to='/blockone' activeStyle={{ color: '#2dbe60' }}>\n        Transactions\n      </NavLinkActive>\n      <NavLinkActive\n        exact\n        to='/blockone/trade'\n        activeStyle={{ color: '#2dbe60' }}\n      >\n        Trade\n      </NavLinkActive>\n    </NavBar>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  margin: 20px 50px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Col = styled.div`\n  flex: ${(props) => props.size};\n`;\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  background-color: white;\n  text-align: center;\n  width: 100%;\n  color: #4c4d4d;\n  margin-bottom: 50px;\n\n  thead > tr {\n    height: 40px;\n    font-size: 18px;\n    color: #4c4d4d;\n    background-color: #dae2e4;\n    border-top: 2px solid #7d7d7d;\n    border-bottom: 2px solid #7d7d7d;\n    cursor: pointer;\n  }\n\n  tbody tr {\n    height: 60px;\n    padding: 16px 24px;\n    border-bottom: 3px solid #e9eff0;\n    :hover {\n      background-color: #dae2e4;\n    }\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\n\nexport const loader = keyframes`\n   0% {\n    box-shadow:\n      -20px 20px 0 #000,\n      -20px -20px 0 #000,\n      20px -20px 0 #000\n  }\n  25% {\n    box-shadow:\n      20px 20px 0 #000,\n      -20px -20px 0 #000,\n      20px -20px 0 #000;\n  }\n  50% {\n    box-shadow:\n      20px 20px 0 #000,\n      -20px 20px 0 #000,\n      20px -20px 0 #000;\n  }\n  75% {\n    box-shadow:\n      20px 20px 0 #000,\n      -20px 20px 0 #000,\n      -20px -20px 0 #000;\n  }\n  100% {\n    box-shadow:\n      20px -20px 0 #000,\n      -20px 20px 0 #000,\n      -20px -20px 0 #000;\n  }\n`;\n\nexport const loaderInner = keyframes`\n  0% {\n    height: 0%;\n  }\n\n  25% {\n    height: 0%;\n  }\n\n  50% {\n    height: 100%;\n  }\n\n  75% {\n    height: 100%;\n  }\n\n  100% {\n    height: 0%;\n  }\n`;\n\nexport const Spinner = styled.div`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: 0px;\n  margin-top: 0px;\n  height: 20px;\n  width: 20px;\n  animation: ${loader} 1s infinite;\n`;\n\nexport const InnerSpinner = styled.div`\n  vertical-align: top;\n  display: inline-block;\n  width: 100%;\n  background-color: #2dbe60;\n  animation: ${loaderInner} 2s infinite ease-in;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #4c4d4d;\n  text-transform: uppercase;\n  width: 100%;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  max-width: 700px;\n  padding: 40px;\n  margin: 30px;\n  background-color: white;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\n\nconst sharedStyles = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin: 0px 0px 20px;\n  padding: 20px;\n  color: #4c4d4d;\n  box-sizing: border-box;\n\n  &:focus {\n    outline: none;\n    border: 1px solid #2dbe60;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5em;\n  color: #4c4d4d;\n  display: block;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  ${sharedStyles};\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  display: block;\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin: 0px 0px 20px;\n  color: grey;\n  padding-left: 20px;\n  -webkit-appearance: none;\n\n  &:focus {\n    outline: none;\n    border: 1px solid #2dbe60;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  background-color: #eee;\n  width: 100%;\n  min-height: 80px;\n  resize: none;\n  margin: 20px 0;\n  ${sharedStyles};\n`;\n\nexport const FieldSet = styled.fieldset`\n  background-color: #eee;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 20px 0;\n  color: #4c4d4d;\n  legend {\n    padding: 0 10px;\n  }\n  label {\n    padding-right: 20px;\n  }\n  input {\n    margin-right: 10px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Input } from '../styles/Form';\n\nexport default function SearchBar(results) {\n  const [query, setQuery] = useState('');\n  const [resultsClone] = useState(results.results);\n\n  const handleChange = (e) => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    const description = resultsClone.filter((result) =>\n      result.description.toLowerCase().includes(query)\n    );\n    results.setResults(description);\n  }, [query]);\n\n  return (\n    <Input\n      type='text'\n      value={query}\n      onChange={handleChange}\n      placeholder='Search by Description'\n      style={{ backgroundColor: 'white' }}\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const DropdownContent = styled.div`\n  display: none;\n  position: absolute;\n  background-color: #f9f9f9;\n  width: 100%;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  text-align: center;\n\n  span {\n    color: black;\n    padding: 12px 16px;\n    text-decoration: none;\n    display: block;\n\n    &:hover {\n      background-color: #f1f1f1;\n    }\n  }\n`;\n\nexport const Dropdown = styled.div`\n  position: relative;\n\n  &:hover ${DropdownContent} {\n    display: block;\n  }\n`;\n\nexport const DropdownButton = styled.button`\n  background-color: #2dbe60;\n  color: white;\n  padding: 0 20px;\n  font-size: 16px;\n  border: 1px solid #2dbe60;\n  border-radius: 5px;\n  height: 40px;\n  cursor: pointer;\n  opacity: 0.8;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  background-color: #2dbe60;\n  color: white;\n  font-size: 16px;\n  border: 1px solid #2dbe60;\n  border-radius: 5px;\n  width: 100%;\n\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizing: border-box;\n\n  &:hover {\n    filter: brightness(1.1);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid #2dbe60;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Dropdown, DropdownContent } from '../styles/Dropdown';\nimport { Button } from '../styles/Button';\n\nexport default function Filter(results) {\n  const [filter, setFilter] = useState('');\n  const [resultsClone] = useState(results.results);\n\n  const filterResults = (e) => {\n    setFilter(e.target.id);\n  };\n\n  useEffect(() => {\n    if (filter === 'credit' || filter === 'debit') {\n      const filtered = resultsClone.filter((result) =>\n        result.action.toLowerCase().includes(filter)\n      );\n      results.setResults(filtered);\n    } else if (filter === 'currentMonth') {\n      var year = new Date().getFullYear();\n      var month = new Date().getMonth();\n      var currentMonth = new Date(year, month, 1);\n      const filtered = resultsClone.filter((result) => {\n        return new Date(result.timestamp) - currentMonth > 0;\n      });\n      results.setResults(filtered);\n    } else if (filter === 'lastMonth') {\n      var lastMonth = new Date();\n      lastMonth.setMonth(lastMonth.getMonth() - 1);\n      const filtered = resultsClone.filter((result) => {\n        return new Date(result.timestamp) - lastMonth > 0;\n      });\n      results.setResults(filtered);\n    } else if (filter === 'sixMonths') {\n      var sixMonths = new Date();\n      sixMonths.setMonth(sixMonths.getMonth() - 6);\n      const filtered = resultsClone.filter((result) => {\n        return new Date(result.timestamp) - sixMonths > 0;\n      });\n      results.setResults(filtered);\n    } else {\n      results.setResults(resultsClone);\n    }\n  }, [filter]);\n\n  return (\n    <Dropdown>\n      <Button>Filter</Button>\n      <DropdownContent>\n        <span id='currentMonth' onClick={(e) => filterResults(e)}>\n          Current Month\n        </span>\n        <span id='lastMonth' onClick={(e) => filterResults(e)}>\n          Last Month\n        </span>\n        <span id='sixMonths' onClick={(e) => filterResults(e)}>\n          Past 6 Months\n        </span>\n        <span id='credit' onClick={(e) => filterResults(e)}>\n          Credit Only\n        </span>\n        <span id='debit' onClick={(e) => filterResults(e)}>\n          Debit Only\n        </span>\n        <span\n          id='clear'\n          onClick={(e) => filterResults(e)}\n          style={{ color: '#d9534f' }}\n        >\n          Clear Filter\n        </span>\n      </DropdownContent>\n    </Dropdown>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Row, Col } from '../styles/Container';\nimport { Table } from '../styles/Table';\nimport { Spinner } from '../styles/Spinner';\nimport { Title } from '../styles/Title';\nimport SearchBar from '../components/SearchBar';\nimport Filter from '../components/Filter';\n\nexport default function Transactions() {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [triangle, setTriangle] = useState({\n    timestamp: String.fromCharCode('9650'),\n    action: String.fromCharCode('9650'),\n    description: String.fromCharCode('9650'),\n    amount: String.fromCharCode('9650'),\n  });\n  const [asc, setAsc] = useState({\n    timestamp: true,\n    action: true,\n    description: true,\n    amount: true,\n  });\n\n  const onSort = (field) => {\n    let ascField = { ...asc };\n    let sortedData = results.slice().sort((a, b) => {\n      if (a[field] < b[field]) {\n        return ascField[field] ? -1 : 1;\n      }\n      if (a[field] > b[field]) {\n        return ascField[field] ? 1 : -1;\n      }\n      return 0;\n    });\n\n    setResults(sortedData);\n    ascField[field] = !ascField[field];\n    setAsc(ascField);\n\n    let triangleField = { ...triangle };\n    triangleField[field] = String.fromCharCode(ascField[field] ? 9650 : 9660);\n    setTriangle(triangleField);\n  };\n\n  useEffect(() => {\n    const transactions = async () => {\n      const data = await fetch(\n        'https://my-json-server.typicode.com/alexradulescu/transactions-fake-api/transactions'\n      )\n        .then((res) => res.json())\n        .catch((err) => {\n          console.log(err);\n        });\n      data.sort((a, b) => b.timestamp.localeCompare(a.timestamp));\n      for (var key in data) {\n        if (data.hasOwnProperty(key)) {\n          if (data[key].action === 'DEBIT') {\n            data[key].amount *= -1;\n          }\n        }\n      }\n      console.log(data);\n      setResults(data);\n      setLoading(false);\n    };\n    transactions();\n  }, []);\n\n  const renderedResults = results.map((result) => {\n    return (\n      <tr className='transactionItem' key={result.id}>\n        <td>{result.timestamp.split('-').reverse().join('-')}</td>\n        <td>{result.action}</td>\n        <td>{result.description}</td>\n        {result.action === 'DEBIT' ? (\n          <td\n            style={{\n              color: '#d9534f',\n            }}\n          >\n            {result.amount} ({result.currency})\n          </td>\n        ) : (\n          <td\n            style={{\n              color: 'limegreen',\n            }}\n          >\n            +{result.amount} ({result.currency})\n          </td>\n        )}\n      </tr>\n    );\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col size={1}>\n          <Title>My Transactions</Title>\n        </Col>\n      </Row>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Row>\n            <Col size={5} style={{ marginRight: '5px' }}>\n              <SearchBar results={results} setResults={setResults} />\n            </Col>\n            <Col size={1}>\n              <Filter results={results} setResults={setResults} />\n            </Col>\n          </Row>\n          <Row>\n            <Col size={1}>\n              <Table>\n                <thead>\n                  <tr>\n                    <th onClick={() => onSort('timestamp')}>\n                      Timestamp {triangle.timestamp}\n                    </th>\n                    <th onClick={() => onSort('action')}>\n                      Action {triangle.action}\n                    </th>\n                    <th onClick={() => onSort('description')}>\n                      Description {triangle.description}\n                    </th>\n                    <th onClick={() => onSort('amount')}>\n                      Amount {triangle.amount}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>{renderedResults}</tbody>\n              </Table>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Grid>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Tabs = styled.div`\n  overflow: hidden;\n  height: 60px;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  width: 50%;\n  position: relative;\n  height: 48px;\n  color: #4c4d4d;\n\n  font-size: 16px;\n  border: ${(props) => (props.active ? '1px solid #2dbe60' : '')};\n  background-color: ${(props) => (props.active ? 'white' : '#eee')};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Alert = styled.div`\n  padding: 20px;\n  background-color: ${(props) => props.color};\n  color: white;\n  font-size: 20px;\n\n  span {\n    margin-left: 15px;\n    color: white;\n    float: right;\n    font-size: 22px;\n    line-height: 20px;\n    cursor: pointer;\n    transition: 0.3s;\n    opacity: 0.6;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport { Alert } from '../styles/Alert';\nimport { useHistory } from 'react-router-dom';\n\nexport default function AlertModal({ alertProps, setAlert }) {\n  const { color, message } = alertProps;\n  const history = useHistory();\n  return (\n    <Alert color={color} onClick={() => setAlert(false)}>\n      {color === '#2dbe60' ? (\n        <span onClick={() => history.push('/blockone')}>view&#10095;</span>\n      ) : (\n        ''\n      )}\n      {message}\n    </Alert>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { Grid, Row } from '../styles/Container';\nimport { Tabs, Tab } from '../styles/Tab';\nimport { Form, Label, Input, TextArea, Select } from '../styles/Form';\nimport { Button } from '../styles/Button';\nimport { Title } from '../styles/Title';\nimport AlertModal from '../components/AlertModal';\n\nexport default function Trade() {\n  const formRef = useRef();\n  const [registerForm, setRegisterForm] = useState({\n    date: `${new Date().toISOString().split('T')[0]}`,\n    action: 'CREDIT',\n    currency: '',\n    description: '',\n    amount: '',\n  });\n  const [active, setActive] = useState(0);\n  const [alert, setAlert] = useState(false);\n  const [alertProps, setAlertProps] = useState({\n    color: '',\n    message: '',\n  });\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n    let previousForm = { ...registerForm };\n    previousForm['action'] = e.target.value;\n    setRegisterForm(previousForm);\n  };\n\n  const handleFieldChange = (field, event) => {\n    let previousForm = { ...registerForm };\n    previousForm[field] = event.target.value;\n    setRegisterForm(previousForm);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await fetch(\n      'https://my-json-server.typicode.com/alexradulescu/transactions-fake-api/transactions',\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          timestamp: registerForm.date,\n          action: registerForm.action,\n          description: registerForm.description,\n          amount: registerForm.amount,\n          currency: registerForm.currency,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }\n    )\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n    event.target.reset();\n    formRef.current.value = '';\n    setActive(0);\n    console.log(res);\n    window.scrollTo(0, 0);\n    if (res == null) {\n      setAlertProps((prevState) => {\n        return {\n          ...prevState,\n          color: 'red',\n          message: 'Transaction failed',\n        };\n      });\n    } else {\n      setAlertProps((prevState) => {\n        return {\n          ...prevState,\n          color: '#2dbe60',\n          message: 'Transaction was successful',\n        };\n      });\n    }\n    setAlert(true);\n  };\n\n  return (\n    <>\n      {alert ? <AlertModal alertProps={alertProps} setAlert={setAlert} /> : ''}\n      <Grid>\n        <Row>\n          <Form id='transactionForm' onSubmit={(e) => handleSubmit(e)}>\n            <Title>Details</Title>\n            <Tabs>\n              <Tab\n                onClick={handleClick}\n                active={active === 0}\n                id={0}\n                value='CREDIT'\n              >\n                CREDIT\n              </Tab>\n              <Tab\n                onClick={handleClick}\n                active={active === 1}\n                id={1}\n                value='DEBIT'\n              >\n                DEBIT\n              </Tab>\n            </Tabs>\n            <Label>Date</Label>\n            <Input\n              type='date'\n              id='date'\n              min={new Date().toISOString().split('T')[0]}\n              defaultValue={new Date().toISOString().split('T')[0]}\n              onChange={(e) => handleFieldChange('date', e)}\n              required\n            />\n            <Label>Currency</Label>\n            <Select\n              defaultValue={registerForm.currency}\n              onChange={(e) => handleFieldChange('currency', e)}\n              ref={formRef}\n              required\n            >\n              <option value='' disabled style={{ color: 'grey' }}>\n                Currency\n              </option>\n              <option value='HKD'>HKD</option>\n              <option value='SGD'>SGD</option>\n              <option value='USD'>USD</option>\n            </Select>\n            <Label>Description</Label>\n            <TextArea\n              type='text'\n              onChange={(e) => handleFieldChange('description', e)}\n              required\n            />\n            <Label>Amount</Label>\n            <Input\n              type='number'\n              className='amount'\n              id='amount'\n              placeholder='$'\n              min='0.00'\n              step='0.01'\n              onChange={(e) => handleFieldChange('amount', e)}\n              required\n            />\n            <Button type='submit' className='submit-button' value='Submit'>\n              Submit\n            </Button>\n          </Form>\n        </Row>\n      </Grid>\n    </>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const lightTheme = {\n  body: '#DAE2E4',\n  fontColor: '#000',\n};\n\nexport const darkTheme = {\n  body: '#121212',\n  fontColor: '#fff',\n};\n\nexport const GlobalStyles = createGlobalStyle`\n    html {\n      height: 100%\n    }\n    body {\n        background-color: ${(props) => props.theme.body};\n        margin: 0;\n        font-family: \"Rubik\", sans-serif;\n        height: 100vh;\n    }\n`;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Transactions from './pages/Transactions';\nimport Trade from './pages/Trade';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, GlobalStyles } from './styles/Theme';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <>\n        <GlobalStyles />\n        <BrowserRouter>\n          <Header />\n          <Route exact path='/blockone' component={Transactions} />\n          <Route path='/blockone/trade' component={Trade} />\n        </BrowserRouter>\n      </>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}